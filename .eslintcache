[{"C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\App.js":"1","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\hooks\\useSocket.js":"2","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\context\\createDataContext.js":"3","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\context\\CoinPriceContext.js":"4","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\components\\Line.js":"5","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\components\\Table.js":"6","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\reportWebVitals.js":"7","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\data\\coin.js":"8","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\index.js":"9"},{"size":1064,"mtime":1606757580334,"results":"10","hashOfConfig":"11"},{"size":2444,"mtime":1606578130759,"results":"12","hashOfConfig":"11"},{"size":621,"mtime":1606569053757,"results":"13","hashOfConfig":"11"},{"size":604,"mtime":1606938679170,"results":"14","hashOfConfig":"11"},{"size":2270,"mtime":1607448320777,"results":"15","hashOfConfig":"11"},{"size":904,"mtime":1607445579745,"results":"16","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"11"},{"size":4599,"mtime":1610225884742,"results":"18","hashOfConfig":"11"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"8zx1zw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\App.js",["44","45"],"import logo from './bitcoin.png';\nimport './App.css';\nimport useSocket from '../src/hooks/useSocket';\nimport {useEffect, useContext} from 'react';\nimport {Provider as CoinPriceProvider} from './context/CoinPriceContext';\nimport {Context as CoinPriceContext} from './context/CoinPriceContext';\nimport Table from './components/Table';\n\nfunction App() {\n  const {state} = useContext(CoinPriceContext);\n  const [connected, subscribe] = useSocket();\n\n  useEffect(() => {\n    let ms = 0;\n    if (connected) {\n      for (const coin of state) {\n        ms += 1000\n        setTimeout(() => {\n          subscribe({\n            symbol: coin.symbol,\n            type: 'trade',\n          });\n        }, ms);\n\n      }\n    }\n  }, [connected]);\n\n  return (\n    <div className=\"App\">\n      <header >\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <Table data={state} />\n      </header>\n    </div>\n  );\n}\n\nexport default () => {\n  return (\n    <div className=\"App-header\">\n      <CoinPriceProvider>\n        <App />\n      </CoinPriceProvider>\n    </div>\n  );\n};\n","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\hooks\\useSocket.js",["46"],"import {useState, useContext} from 'react';\r\nimport {Context} from '../context/CoinPriceContext';\r\nconst url = 'wss://stream.binance.com:9443/ws/CELRBTC@trade';\r\nconst connection = new WebSocket(url);\r\n\r\nconst useSocket = () => {\r\n  const {state, onPriceChange} = useContext(Context);\r\n  const [connected, setConnected] = useState(false)\r\n\r\n  connection.onopen = () => {\r\n    setConnected(true)\r\n    console.log('Streaming ready!');\r\n  };\r\n\r\n  connection.onmessage = e => {\r\n    let data = JSON.parse(e.data);\r\n\r\n    if (data.e === 'kline') {\r\n      console.log(\r\n        'Coin:',\r\n        data.s,\r\n        'Mum aralığı:',\r\n        data.k.i,\r\n        'Mum acilis saati:',\r\n        data.k.t,\r\n        'Mum kapanis saati:',\r\n        data.k.T,\r\n        'İşlem sayisi:',\r\n        data.k.n,\r\n        'Hacim:',\r\n        data.k.v,\r\n      );\r\n    }\r\n\r\n    if (data.e === 'trade' || data.e === 'aggTrade') {\r\n      onPriceChange(data.s, data.p)\r\n      //   const {onTrade} = require('./logic/buyAndTraceDemo');\r\n      //   onTrade(data.s,data.p)\r\n      //   // console.log(\r\n      //   //   \"Coin:\",\r\n      //   //   data.s,\r\n      //   //   \"Fiyat:\",\r\n      //   //   data.p,\r\n      //   //   \"Miktar:\",\r\n      //   //   data.q,\r\n      //   //   \"İşlem saati:\",\r\n      //   //   new Date(data.E)\r\n      //   // );\r\n    }\r\n  };\r\n\r\n  connection.onerror = error => {\r\n    console.log(`WebSocket error: ${error.message}`);\r\n  };\r\n\r\n  connection.onclose = e => {\r\n    console.log('closed');\r\n    console.log(e);\r\n  };\r\n\r\n  // \"arpabtc@kline_1m\", \"arpabtc@trade\", \"cosbtc@trade\", 'cosbtc@kline_1m', \"btcusdt@kline_1m\"\r\n  const subscribe = ({symbol, type}) => {\r\n    if (connection.readyState !== 1) {\r\n      throw new Error('Bağlantı yok');\r\n    }\r\n    symbol = symbol.toLowerCase();\r\n    console.log('Subscribing', symbol, type);\r\n    connection.send(\r\n      JSON.stringify({\r\n        method: 'SUBSCRIBE',\r\n        params: [`${symbol}@${type}`],\r\n        id: 1,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const unsubscribe = (symbol, type) => {\r\n    if (connection.readyState !== 1) {\r\n      throw new Error('Bağlantı yok');\r\n    }\r\n    symbol = symbol.toLowerCase();\r\n    console.log('Unsubscribing', symbol, type);\r\n    connection.send(\r\n      JSON.stringify({\r\n        method: 'UNSUBSCRIBE',\r\n        params: [`${symbol}@${type}`],\r\n        id: 1,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return [connected, subscribe, unsubscribe];\r\n};\r\n\r\nexport default useSocket;\r\n",["47","48"],"C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\context\\createDataContext.js",[],["49","50"],"C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\context\\CoinPriceContext.js",[],["51","52"],"C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\components\\Line.js",["53"],"import React, {useEffect, useState} from 'react';\r\n\r\nfunction Line({symbol, buyPrice, price, sellPrice, buyDate, sellDate}) {\r\n  const [timePassed, setTimePassed] = useState('');\r\n  const changePercentage = (((price - buyPrice) * 100) / buyPrice).toFixed(4);\r\n  const changePercentageClassName =\r\n    changePercentage > 0 ? 'positive' : 'negative';\r\n\r\n  let sellPercentage = (((sellPrice - buyPrice) * 100) / buyPrice).toFixed(4);\r\n  const sellPercentageClassName = sellPercentage > 0 ? 'positive' : 'negative';\r\n\r\n  if (isNaN(sellPercentage)) {\r\n    sellPercentage = '';\r\n  } else {\r\n    sellPercentage += '%';\r\n  }\r\n\r\n  let sellPriceFormatted = '';\r\n  if (sellPrice) {\r\n    sellPriceFormatted = sellPrice.toFixed(8);\r\n  }\r\n\r\n  let changePercentageString = isNaN(changePercentage)\r\n    ? ''\r\n    : changePercentage + '%';\r\n  // console.log(new Date(sellDate) - Date.now())\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      let timePassedx = sellDate\r\n        ? new Date(sellDate) - new Date(buyDate)\r\n        : Date.now() - new Date(buyDate);\r\n      timePassedx = timePassedx / 1000;\r\n      timePassedx = toHHMMSS(timePassedx);\r\n      setTimePassed(timePassedx)\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <tr>\r\n      <td>{symbol}</td>\r\n      <td>{buyPrice.toFixed(8)}</td>\r\n      <td>{price}</td>\r\n      <td className={changePercentageClassName}>{changePercentageString}</td>\r\n      <td>{sellPriceFormatted}</td>\r\n      <td className={sellPercentageClassName}>{sellPercentage}</td>\r\n      <td>{timePassed}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Line;\r\n\r\nfunction toHHMMSS(seconds) {\r\n  let sec_num = parseInt(seconds, 10); // don't forget the second param\r\n  let days = Math.floor(sec_num / ( 3600 * 24));\r\n  let hours = Math.floor((sec_num - (days * 3600 * 24)) / 3600);\r\n  let minutes = Math.floor((sec_num - (days * 3600 * 24) - hours * 3600) / 60);\r\n  let secs = sec_num - (days * 3600 * 24) - hours * 3600 - minutes * 60;\r\n\r\n  if (hours < 10) {\r\n    hours = '0' + hours;\r\n  }\r\n  if (minutes < 10) {\r\n    minutes = '0' + minutes;\r\n  }\r\n  if (secs < 10) {\r\n    secs = '0' + secs;\r\n  }\r\n  \r\n  days = days ? days + 'g' : '';\r\n  return days + ' ' +  hours + ':' + minutes + ':' + secs;\r\n}\r\n","C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\components\\Table.js",[],"C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\reportWebVitals.js",[],"C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\data\\coin.js",[],"C:\\Users\\faruk\\Desktop\\coin-monitor\\src\\index.js",[],{"ruleId":"54","severity":1,"message":"55","line":27,"column":6,"nodeType":"56","endLine":27,"endColumn":17,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":40,"column":1,"nodeType":"60","endLine":48,"endColumn":3},{"ruleId":"61","severity":1,"message":"62","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":15},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"54","severity":1,"message":"73","line":40,"column":6,"nodeType":"56","endLine":40,"endColumn":8,"suggestions":"74"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'state' and 'subscribe'. Either include them or remove the dependency array.","ArrayExpression",["75"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],["76"],["77"],"React Hook useEffect has missing dependencies: 'buyDate' and 'sellDate'. Either include them or remove the dependency array.",["78"],{"desc":"79","fix":"80"},"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [connected, state, subscribe]",{"range":"83","text":"84"},"Update the dependencies array to be: [buyDate, sellDate]",{"range":"85","text":"86"},[715,726],"[connected, state, subscribe]",[1259,1261],"[buyDate, sellDate]"]